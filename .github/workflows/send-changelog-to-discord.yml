name: Notify Discord on Changelog Update

on:
  push:
    paths:
      - 'CHANGELOG.md'

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get commit SHA
        id: get-sha
        run: echo "CURRENT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Fetch previous commit
        id: fetch-prev
        run: |
          git fetch --depth=2
          echo "PREVIOUS_SHA=$(git rev-parse HEAD^)" >> $GITHUB_ENV

      - name: Get changed files
        id: get_changes
        run: |
          git diff --name-only ${{ env.PREVIOUS_SHA }} ${{ env.CURRENT_SHA }} > changes.txt
          cat changes.txt
          CHANGED_FILES=$(cat changes.txt)
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Check if CHANGELOG.md was updated
        id: check_changelog
        run: |
          if echo "${{ env.CHANGED_FILES }}" | grep -q 'CHANGELOG.md'; then
            echo "CHANGELOG_MD_UPDATED=true" >> $GITHUB_ENV
          else
            echo "CHANGELOG_MD_UPDATED=false" >> $GITHUB_ENV
          fi

      - name: Extract latest update from CHANGELOG.md
        if: ${{ env.CHANGELOG_MD_UPDATED == 'true' }}
        id: extract_update
        run: |
          # Extract the latest update section from CHANGELOG.md
          awk '/^## \[/{i++}i==1' CHANGELOG.md > latest_update.txt
          # Read the extracted content into a variable
          LATEST_UPDATE=$(cat latest_update.txt)
          # Ensure we don't exceed Discord's message length limit
          echo "LATEST_UPDATE=$(echo "$LATEST_UPDATE" | head -c 2000)" >> $GITHUB_ENV

      - name: Send update to Discord
        if: ${{ env.CHANGELOG_MD_UPDATED == 'true' }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          # Create a JSON payload with the extracted update
          PAYLOAD=$(jq -n --arg content "$LATEST_UPDATE" '{content: $content}')
          # Send the payload to Discord
          curl -H "Content-Type: application/json" -X POST -d "$PAYLOAD" $DISCORD_WEBHOOK
